#!/usr/bin/env python3

import sys
import json
import time

import qstatpretty.ttyutil as tty
import qstatpretty.parser as parser

def state_color(s):
	if "E" in s: return tty.COLOR_RED
	if "T" in s: return tty.COLOR_RED
	if "d" in s: return tty.COLOR_BLUE
	if "t" in s: return tty.COLOR_RED
	if "h" in s: return tty.COLOR_MAGENTA
	if "q" in s: return tty.COLOR_YELLOW
	if "r" in s: return tty.COLOR_GREEN
	if "t" in s: return tty.COLOR_CYAN
	return None


DATE_FORMAT = lambda d: d.strftime('%m-%d %H:%M:%S')

DEFAULT_TABLE_FORMAT = [
	 {
		 'key':     'number'
		,'title':   'job-ID'
		,'format':  lambda x: "{:d}".format(x)
		,'color': lambda x: None
	 }
	,{
		 'key':     'priority'
		,'title':   'priorty'
		,'format':  lambda x: "{:0.5f}".format(x)
		,'color': lambda x: None
	 }
	,{
		 'key':     'name'
		,'title':   'name'
		,'format':  lambda x: x
		,'color': lambda x: tty.COLOR_BLUE
	 }
	,{
		 'key':     'owner'
		,'title':   'user'
		,'format':  lambda x: x
		,'color': lambda x: None
	 }
	,{
		 'key':     'state'
		,'title':   'state'
		,'format':  lambda x: x
		,'color': state_color
	 }
	,{
		 'key':     't_submit'
		,'title':   't_submit'
		,'format':  DATE_FORMAT
		,'color': lambda x: None
	 }
	,{
		 'key':     't_start'
		,'title':   't_start'
		,'format':  DATE_FORMAT
		,'color': lambda x: None
	 }
	,{
		 'key':     'queue'
		,'title':   'queue'
		,'format':  lambda x: x
		,'color': lambda x: None
	 }
	,{
		 'key':     'slots'
		,'title':   'slots'
		,'format':  lambda x: "{:d}".format(x)
		,'color': lambda x: None
	 }
	,{
		 'key':     'tasks'
		,'title':   'tasks'
		,'format':  lambda x: "{:d}".format(x)
		,'color': lambda x: None
	 }
]


def empty_cols(tbl):
	if not tbl: return set()

	emptycols = set(range(len(tbl[0])))

	for row in tbl:
		fullcols = set()
		for col in emptycols:
			if row[col].strip():
				fullcols.add(col)

		for col in fullcols: emptycols.remove(col)
		if not emptycols: break

	return emptycols

def remove_cols(tbl, cols):
	return [ [ col for i, col in enumerate(row) if i not in cols] for row in tbl ]

jobs = parser.parse_xml(sys.stdin)

def job_table(jobs, table_format=DEFAULT_TABLE_FORMAT):

	header = [ col['title'] for col in table_format ]
	body = [ [ col['format'](job[col['key']]) if job[col['key']] else "" for col in table_format ] for job in jobs]

	return remove_cols([header] + body, empty_cols(body))

if jobs:
	tbl = job_table(jobs)
	print(tty.pretty_table(tbl, DEFAULT_TABLE_FORMAT))

if len(jobs) == 1:
	print("1 job total.")
else:
	print("{} jobs total.".format(len(jobs)))

